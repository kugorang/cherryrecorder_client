name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  check_paths:
    runs-on: ubuntu-latest
    outputs:
      gh_pages_changed: ${{ steps.filter.outputs.gh_pages == 'true' }}
      docker_changed: ${{ steps.filter.outputs.docker == 'true' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check for relevant file changes
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            _common_paths_def: &common_paths_list 
              - 'lib/**'
              - 'web/**'
              - 'assets/**'
              - 'pubspec.yaml'
              - 'pubspec.lock'

            gh_pages: 
              - *common_paths_list
              - '.github/workflows/ci.yml'

            docker: 
              - *common_paths_list
              - 'Dockerfile'
              - '.docker/**'
              - '.github/workflows/ci.yml'

  deploy_gh_pages:
    needs: check_paths
    if: needs.check_paths.outputs.gh_pages_changed == 'true' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.2'
          channel: 'stable'

      - name: Get dependencies
        run: flutter pub get

      - name: Build Web for GH Pages
        run: |
          flutter build web --release --base-href "/cherryrecorder_client/" \
          --dart-define=APP_ENV=prod \
          --dart-define=WEB_MAPS_API_KEY=${{ secrets.WEB_MAPS_API_KEY }}

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: build/web

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  build_and_push_docker:
    needs: check_paths
    if: needs.check_paths.outputs.docker_changed == 'true' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/cherryrecorder_client
          tags: |
            type=sha,prefix=sha-,format=short
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          secrets: |
            "web_maps_api_key=${{ secrets.WEB_MAPS_API_KEY }}"
          build-args: |
            APP_ENV=prod
            BASE_HREF=/
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Print Docker image info
        run: |
          echo "Docker image pushed successfully!"
          echo "Image digest: ${{ steps.docker_build.outputs.digest }}"
          echo "Image tags:"
          echo "${{ steps.meta.outputs.tags }}"
          echo ""
          echo "Pull commands:"
          echo "docker pull ${{ secrets.DOCKERHUB_USERNAME }}/cherryrecorder_client:latest"
          echo "docker pull ${{ secrets.DOCKERHUB_USERNAME }}/cherryrecorder_client:sha-${GITHUB_SHA::7}"
