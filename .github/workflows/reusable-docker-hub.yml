on:
  workflow_call:
    inputs:
      image_digest:
        required: true
        type: string
      image_tag_sha:
        required: true
        type: string
      ghcr_repository:
        required: true
        type: string
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true

jobs:
  push_job:
    name: Push to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install skopeo and jq
        run: |
          sudo apt-get update && sudo apt-get install -y --no-install-recommends skopeo jq && sudo rm -rf /var/lib/apt/lists/*

      - name: Get Docker Hub image manifest digest
        id: get-latest-digest
        run: |
          DH_IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/cherryrecorder_client:latest"
          LATEST_DIGEST=$(skopeo inspect --raw docker://$DH_IMAGE 2>/dev/null | jq -r '.digest // empty' || echo "")
          echo "latest_digest=$LATEST_DIGEST" >> $GITHUB_OUTPUT

      - name: Check if push needed
        id: check-push
        run: |
          if [ "${{ inputs.image_digest }}" != "${{ steps.get-latest-digest.outputs.latest_digest }}" ] || [ -z "${{ steps.get-latest-digest.outputs.latest_digest }}" ]; then
            echo "push_required=true" >> $GITHUB_OUTPUT
          else
            echo "push_required=false" >> $GITHUB_OUTPUT
          fi

      - name: Copy to Docker Hub
        if: steps.check-push.outputs.push_required == 'true'
        run: |
          DH_IMAGE_BASE="${{ secrets.DOCKERHUB_USERNAME }}/cherryrecorder_client"
          GHCR_IMAGE="ghcr.io/${{ inputs.ghcr_repository }}"
          
          docker buildx imagetools create \
            --tag $DH_IMAGE_BASE:${{ inputs.image_tag_sha }} \
            $GHCR_IMAGE:${{ inputs.image_tag_sha }}
          
          docker buildx imagetools create \
            --tag $DH_IMAGE_BASE:latest \
            $GHCR_IMAGE:latest

      - name: Push skipped
        if: steps.check-push.outputs.push_required == 'false'
        run: echo "Docker Hub push skipped - digest matches"
